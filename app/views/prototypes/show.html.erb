<main class="main">
  <div class="inner">
    <div class="prototype__wrapper">
      <p class="prototype__hedding">
        <%= @prototype.title %>
      </p>
      <%# @prototype.user.id←idはカラムを取り出すuserはモデル %>
      <%= link_to "by #{@prototype.user.name}", user_path(@prototype.user.id), method: :get, class: :prototype__user %>
      <%# プロトタイプの投稿者とログインしているユーザーが同じであれば以下を表示する %>
      <% if user_signed_in? && current_user.id == @prototype.user.id %>
        <div class="prototype__manage">
        <%# 編集も削除も一つの処理なのでidでパスを渡すそのためのコントローラーで＠prototypeをfind(params)にしてあるuser_idとか要らない %>
          <%= link_to "編集する", edit_prototype_path(@prototype.id), method: :get, class: :prototype__btn %>
          <%= link_to "削除する", prototype_path(current_user.id), method: :delete, class: :prototype__btn %>
        </div>
      <% end %>
      <%# // プロトタイプの投稿者とログインしているユーザーが同じであれば上記を表示する %>
      <div class="prototype__image">
        <%= image_tag @prototype.image %>
      </div>
      <div class="prototype__body">
        <div class="prototype__detail">
          <p class="detail__title">キャッチコピー</p>
          <p class="detail__message">
            <%= @prototype.catch_copy %>
          </p>
        </div>
        <div class="prototype__detail">
          <p class="detail__title">コンセプト</p>
          <p class="detail__message">
            <%= @prototype.concept %>
          </p>
        </div>
      </div>
      <%# ログインしているユーザーには以下のコメント投稿フォームを表示する %>
      <div class="prototype__comments">
          <%# ルーツでネストした時と同じように[親子関係]で記述すること %>
          <%= form_with(model: [@prototype, @comment], local: true) do |f| %>
              <% if user_signed_in? %>
                <div class="field">
                  <%= f.label :text, "コメント" %><br />
                  <%= f.text_field :text, id:"comment_text" %>
                </div>
                <div class="actions">
                  <%= f.submit "送信する", class: :form__btn %>
                </div>
              <% else %>
                  <strong><p>※※※ コメントの投稿には新規登録/ログインが必要です ※※※</p></strong>
              <% end %>
        <% end %> 
        <%# // ログインしているユーザーには上記を表示する %>
        <%# 投稿に紐づくコメントを一覧する処理を記述する %>
        <ul class="comments_lists">
        <%# コメントのたびコメントをコメントcに飛ばしてsaveさせてsaveしたものをモデルに返して表示させる %>
        <% @comments.each do |comment| %>
            <li class="comments_list">
            <%# byはコメントした方の名前を表示 コメントした方の詳細ぺージまで飛ばす %>
               <%= comment.text %>
               <%#  link_to comment.user.nameで名前を定義できるのはeachないでブロック変数で区々割れているため、コメント者の名前が載る%>
               <%= link_to comment.user.name, user_path(comment.user_id), class: :comment_user %>
               <%# user_path(comment.user_id) %>
            </li>
        <% end %>
          <%# // 投稿に紐づくコメントを一覧する処理を記述する %>
        </ul>
      </div>
    </div>
  </div>
</main>
